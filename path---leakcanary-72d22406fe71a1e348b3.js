webpackJsonp([0x6d48df650824],{482:function(n,a){n.exports={data:{site:{siteMetadata:{title:"Dev Notes",author:"Alexey Sadykov"}},markdownRemark:{id:"/Users/fixer/Sources/fixerteam/src/pages/leakcanary/index.md absPath of file >>> MarkdownRemark",html:'<p>Полезная библиотека от <a href="http://square.github.io/">Square</a> для поиска утечек памяти в андроид приложении.\nПодключаем зависимости в build.gradle</p>\n<div class="gatsby-highlight">\n      <pre class="language-groovy"><code>dependencies <span class="token punctuation">{</span>\n   debugCompile <span class="token string">\'com.squareup.leakcanary:leakcanary-android:1.4-beta2\'</span>\n   releaseCompile <span class="token string">\'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2\'</span>\n   testCompile <span class="token string">\'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2\'</span>\n <span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>добавляем инициализацию в Application класс приложения</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleApp</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>\n\n  <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    LeakCanary<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>и все готово. Этого достаточно для базовой настройки библиотеки. LeakCanary при запуске приложения будет следить за возможными утечками activity (по умолчанию) и предупреждать о них. Изображение взято с <a href="https://github.com/square/leakcanary">github</a> авторов библиотеки\n<img src="https://github.com/square/leakcanary/blob/master/assets/screenshot.png?raw=true" alt="Внешний вид"></p>\n<p>Также библиотека позволяет отслеживать любые объекты вашего приложения на возможные утечки (например fragment-ы). Для этого необходимо дописать код Application класса:</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleApp</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>\n  <span class="token keyword">private</span> RefWatcher refWatcher<span class="token punctuation">;</span>\n\n  <span class="token keyword">public</span> <span class="token keyword">static</span> RefWatcher <span class="token function">getRefWatcher</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    ExampleApp app <span class="token operator">=</span> <span class="token punctuation">(</span>ExampleApp<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> app<span class="token punctuation">.</span>refWatcher<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    refWatcher <span class="token operator">=</span> LeakCanary<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>затем в fragment-е добавить следующее:</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n  <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    Context context <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>context <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      ExampleApp<span class="token punctuation">.</span><span class="token function">getRefWatcher</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>',frontmatter:{title:"LeakCanary",date:"July 30, 2016"}}},pathContext:{slug:"/leakcanary/",previous:{fields:{slug:"/otto/"},frontmatter:{title:"Otto"}},next:{fields:{slug:"/vscode/"},frontmatter:{title:"Настройка IDE для разработки под ReactNative"}}}}}});
//# sourceMappingURL=path---leakcanary-72d22406fe71a1e348b3.js.map